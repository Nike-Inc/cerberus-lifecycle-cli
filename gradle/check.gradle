/*
 * Copyright (c) 2019 Nike, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'pmd'
apply plugin: "jacoco"
apply plugin: 'com.github.kt3k.coveralls'

pmd {
    sourceSets = [project.sourceSets.main]
    ruleSets = []
    ruleSetFiles = files('codequality/pmd.xml')
    rulesMinimumPriority = 2
    ignoreFailures = false
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
    filter {
        excludeTestsMatching "com.nike.cerberus.cli.CerberusRunnerTest"
    }
}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
    dependsOn test
}

spotbugs {
    ignoreFailures = true
    showStackTraces = false
    showProgress = true
    effort = 'default'
    reportLevel = 'default'
    reportsDir = file("$buildDir/reports/spotbugs")
    //visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
    //omitVisitors = [ 'FindNonShortCircuit' ]
    //includeFilter = file("include.xml")
    //excludeFilter = file("exclude.xml")
    //baselineFile = file("baseline.xml")
    //onlyAnalyze = [ 'com.foobar.MyClass', 'com.foobar.mypkg.*' ]
    //maxHeapSize = '1g'
    //extraArgs = [ '-nested:false' ]
    //jvmArgs = [ '-Duser.language=ja' ]
}

spotbugsMain {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            //stylesheet = 'fancy-hist.xsl'
        }
    }
}

test.finalizedBy(project.tasks.jacocoTestReport)

tasks.coveralls.dependsOn check
