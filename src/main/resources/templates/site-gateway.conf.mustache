server {
    listen 443 default_server;

    ssl                 on;
    ssl_certificate     /etc/ssl/gateway.pem;
    ssl_certificate_key /etc/ssl/gateway.key;

    server_name {{{gatewayHost}}};

    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    ###
    #
    # Request Routing.  ORDER IS IMPORTANT.
    #
    ###

    # Expose Nginx status on loopback.
    location /sys/status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }

    # Simple health response
    location = /sys/health {
        access_log off;
        return 200;
    }

    location /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: /\n";
    }

    # Dashboard
    location /dashboard {
        add_header X-Frame-Options deny;
        add_header Content-Security-Policy "frame-ancestors 'none'";
        add_header X-Content-Security-Policy "frame-ancestors 'none'";
        set $dashboard "{{{dashboardHost}}}";
        rewrite ^/dashboard/(.*) /$1 break;
        proxy_set_header Host $dashboard;
        proxy_pass http://$dashboard;
    }

    # Allow lookup-self call for a token to go straight to Vault
    location ~ /v1/auth/token/lookup-self {
        set $vault "{{{vaultHost}}}";
        proxy_pass https://$vault;
    }

    # Everything else under /v1/secret goes to Vault
    location ~ /v1/secret {
        set $vault "{{{vaultHost}}}";
        proxy_pass https://$vault;
    }

    # Everything goes to CMS
    location ~ /v\d {
        set $cms "{{{cmsHost}}}";
        proxy_pass https://$cms;
    }

    # Redirect root to the dashboard
    location / {
        return 301 https://{{{gatewayHost}}}/dashboard/;
    }
}
