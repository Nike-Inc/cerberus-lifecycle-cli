AWSTemplateFormatVersion: '2010-09-09'
Description: Creates the necessary IAM roles, S3 buckets, and KMS keys for Cerberus
Outputs:
  configBucketDomainName:
    Value: !GetAtt 'CerberusConfigBucket.DomainName'
  configBucketName:
    Value: !Ref 'CerberusConfigBucket'
  configFileKeyId:
    Value: !Ref 'ConfigFileKey'
  cmsIamRoleArn:
    Value: !GetAtt 'CmsIamRole.Arn'
  cmsIamRoleName:
    Value: !Ref 'CmsIamRole'
    Export:
      Name: !Sub "${AWS::StackName}-cmsIamRoleName"
  cmsKmsPolicyId:
    Description: The policy id for CMS managing KMS keys
    Value: !Ref 'CmsKmsPolicy'
Parameters:
  accountAdminArn:
    Description: The ARN for a IAM user, group or role that can create this stack.
    Type: String
Resources:
  CerberusConfigBucket:
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket
  CerberusConfigBucketAccessPolicy:
    Properties:
      Bucket: !Ref 'CerberusConfigBucket'
      PolicyDocument:
        Statement:
          - Action:
              - s3:ListBucket
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 'CmsIamRole.Arn'
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref 'CerberusConfigBucket']]
              - !Join ['', ['arn:aws:s3:::', !Ref 'CerberusConfigBucket', /*]]
            Sid: Allow-ListBucket-Access
          - Action:
              - s3:*
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 'CmsIamRole.Arn'
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref 'CerberusConfigBucket', /certificates/*]]
              - !Join ['', ['arn:aws:s3:::', !Ref 'CerberusConfigBucket', /certificates]]
              - !Join ['', ['arn:aws:s3:::', !Ref 'CerberusConfigBucket', /cms/*]]
              - !Join ['', ['arn:aws:s3:::', !Ref 'CerberusConfigBucket', /cms]]
            Sid: Allow-Bucket-Access-For-CMS
        Version: '2012-10-17'
    Type: AWS::S3::BucketPolicy
  CmsIamRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - EC2:Describe*
                  - cloudformation:SignalResource
                Effect: Allow
                Resource: '*'
          PolicyName: cmsPolicy
    Type: AWS::IAM::Role
  CmsKmsPolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - kms:CreateAlias
              - kms:CreateKey
              - kms:DeleteAlias
              - kms:DescribeKey
              - kms:DisableKey
              - kms:DisableKeyRotation
              - kms:EnableKey
              - kms:EnableKeyRotation
              - kms:GetKeyPolicy
              - kms:GetKeyRotationStatus
              - kms:ListAliases
              - kms:ListKeyPolicies
              - kms:ListKeys
              - kms:PutKeyPolicy
              - kms:UpdateAlias
              - kms:UpdateKeyDescription
            Effect: Allow
            Resource:
              - '*'
        Version: '2012-10-17'
      PolicyName: CmsKmsPolicy
      Roles:
        - Ref: 'CmsIamRole'
    Type: AWS::IAM::Policy
  ConfigFileKey:
    Properties:
      Description: Cerberus encryption key for storing config files in an encrypted
        state.
      Enabled: 'true'
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS:
                - !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':root']]
            Resource: '*'
            Sid: Allow-Root-User
          - Action:
              - kms:Decrypt
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 'CmsIamRole.Arn'
            Resource: '*'
            Sid: Allow-Decrypt-From-Instances
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS:
                Ref: 'accountAdminArn'
            Resource: '*'
            Sid: Allow-Account-Admin
        Version: '2012-10-17'
    Type: AWS::KMS::Key